#!/bin/bash

#License:
# MIT license.
# 
# Copyright (c) 2009 Thomas McGrew
#  
#  Permission is hereby granted, free of charge, to any person
#  obtaining a copy of this software and associated documentation
#  files (the "Software"), to deal in the Software without
#  restriction, including without limitation the rights to use,
#  copy, modify, merge, publish, distribute, sublicense, and/or sell
#  copies of the Software, and to permit persons to whom the
#  Software is furnished to do so, subject to the following
#  conditions:
#   
#   The above copyright notice and this permission notice shall be
#   included in all copies or substantial portions of the Software.
#    
#   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
#   OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
#   NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
#   HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
#   WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
#   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
#   OTHER DEALINGS IN THE SOFTWARE.


#   I HAVE TESTED THIS SOFTWARE BUT I OFFER NO GUARANTEE THAT IT WILL
#   NOT CORRUPT YOUR REPOSITORY. PLEASE BACKUP BEFORE EXECUTING THIS
#   SCRIPT!!

#create a random string for temporary use
TMP_BRANCH=$(echo $RAMDOM$RANDOM$RANDOM$RANDOM$RANDOM | base64 | tr -d \\n\=)
CURRENT_BRANCH=$(git branch | grep ^\* | awk '{print $2}')

# check for a valid git repo
if [ ! -d .git ]; then
	echo "This does not appear to be the root directory of a valid git repository";
	exit;
fi;

# create the proper directory structure in an EMPTY svn repo
# make sure the repo is completely new, else this probably won't work
mkdir /tmp/$TMP_BRANCH
cd /tmp/$TMP_BRANCH
mkdir trunk branches tags
svn import . $1 -m "Created svn repository structure" || exit; 

#change back to our git repo
cd -

# stash any uncommitted changes
git reset HEAD
if [ $(git stash save | wc -l) -gt 1 ]; then
	STASH="true"
fi;
git rm --cached -r .
git clean -f -d

#import the empty svn repo into git
git svn init --prefix=svn/ $1 --branches=branches --trunk=trunk --tags=tags .
git svn fetch

#create a temporary branch
git checkout -b $TMP_BRANCH svn/trunk

#rebase our $CURRENT_BRANCH branch on this temp branch
git cherry-pick $(git rev-list --reverse $CURRENT_BRANCH | head -1)
git rebase --onto $TMP_BRANCH $TMP_BRANCH $CURRENT_BRANCH

#delete the temp branch
git branch -d $TMP_BRANCH

#push out the commits to svn
git svn dcommit

#re-apply any uncommitted changes
if [ $STASH ]; then
	git stash apply 
fi;
